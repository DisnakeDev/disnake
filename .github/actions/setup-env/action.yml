# SPDX-License-Identifier: MIT

name: Set up environment
description: .
inputs:
  python-version:
    description: The python version to install
    required: true
  cache-dependency-path:
    description: The path(s) to use for pip caching, defaults to requirements + setup
    required: false
    default: |
      requirements/
      requirements.txt
      setup.py
      pyproject.toml
  dependencies:
    description: Other python dependencies to install
    required: false
  nox-setup:
    description: |
      The dependencies to install using `nox -s setup`.
      Automatically installs nox as well.
      Use `*` to install all dependencies.
    required: false
outputs:
  python-version:
    description: The python version that was installed.
    value: ${{ steps.python-version.outputs.python-version }}

runs:
  using: composite
  steps:
    - name: Set up python ${{ inputs.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Update pip, wheel, setuptools
      shell: bash
      run: python -m pip install -U pip wheel setuptools

    - name: Install dependencies
      if: inputs.nox-setup || inputs.dependencies
      env:
        NOX_SETUP: ${{ inputs.nox-setup }}
        DEPS: ${{ inputs.dependencies }}
      shell: bash
      run: |
        [ -n "$NOX_SETUP" ] && DEPS="$DEPS nox"
        python -m pip install $DEPS

        if [ "*" == "$NOX_SETUP" ]; then
          nox -s setup
        elif [ -n "$NOX_SETUP" ]; then
          nox -s setup -- $NOX_SETUP
        fi

    - name: Set python version
      id: python-version
      shell: bash
      run: |
        echo "python-version=$(python -c 'import sys; print(".".join(map(str,sys.version_info[:2])))')" >> $GITHUB_OUTPUT
