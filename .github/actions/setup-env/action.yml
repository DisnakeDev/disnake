# SPDX-License-Identifier: MIT

name: Set up environment
description: .
inputs:
  python-version:
    description: The python version to install
    required: true
  uv-version:
    description: The uv version to install
    required: true
outputs:
  python-version:
    description: The python version that was installed.
    value: ${{ steps.python-version.outputs.python-version }}

runs:
  using: composite
  steps:
    - name: Download uv lock
      uses: actions/cache/restore@v4
      id: restore-uv-lock
      with:
        key: uv-lock-resolved-${{ env.UV_RESOLUTION }}
        path: uv.lock
        restore-keys: |
          uv-lock-resolved-${{ env.UV_RESOLUTION }}
        enableCrossOsArchive: true
        fail-on-cache-miss: true

    - name: Set up uv with python ${{ inputs.python-version }}
      id: setup-python
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ inputs.python-version }}
        version: ${{ inputs.uv-version }}
        enable-cache: true

    - name: Set python version
      id: python-version
      shell: bash
      env:
        UV_VENV_CLEAR: 1
      run: |
        uv venv .venv
        echo "python-version=$($(uv python find) -c 'import sys; print(".".join(map(str,sys.version_info[:2])))')" >> $GITHUB_OUTPUT
