# SPDX-License-Identifier: MIT

name: Set up environment
description: .
inputs:
  python-version:
    description: The python version to install
    required: true
  cache-dependency-path:
    description: The path(s) to use for pip caching, defaults to requirements + setup
    required: false
    default: |
      pyproject.toml
      poetry.lock
  dependencies:
    description: Other python dependencies to install
    required: false
  dependency-groups:
    description: |
      The dependencies to install using `poetry install`.
      Automatically installs nox as well.
      Use `*` to install all dependencies.
    required: false

runs:
  using: composite
  steps:
    - name: Set up python ${{ inputs.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python-version }}
        # cache: "pip"
        # cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Create and activate vrtual environment
      shell: bash
      run: |
        pipx install poetry==1.2.0rc1
        python -m venv .venv
        PATH="$(poetry env info --path)/bin:$PATH"

    - name: Install dependencies
      if: inputs.dependency-groups || inputs.dependencies
      env:
        DEPENDENCY_GROUPS: ${{ inputs.dependency-groups }}
        DEPS: ${{ inputs.dependencies }}
      shell: bash
      run: |
        [ -n "$DEPENDENCY_GROUPS" ] && DEPS="$DEPS nox"
        python -m pip install $DEPS

        if [ "*" == "$DEPENDENCY_GROUPS" ]; then
          poetry install --all-extras
        elif [ -n "$DEPENDENCY_GROUPS" ]; then
           poetry install --only $DEPENDENCY_GROUPS
        fi
