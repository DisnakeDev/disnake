# SPDX-License-Identifier: MIT

name: Configure UV cache
description: .
inputs:
  env-already-initialized:
    description: Whether Python/UV is already configured
    required: false
    default: 'true'
  python-version:
    description: Python version to use
    required: false
    default: '3.8'

runs:
  using: composite
  steps:
    - name: Get metadata for cache
      id: get-cache-meta
      shell: bash
      run: |
        echo "date=$(date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

    - name: Setup/Restore cache
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          uv.lock
        # cache lockfile for the current day, roughly
        key: uv-${{ steps.get-cache-meta.outputs.date }}-${{ hashFiles('pyproject.toml') }}
        # uv lockfiles should be platform-agnostic
        enableCrossOsArchive: true

    - if: ${{ steps.cache.outputs.cache-hit != 'true' && inputs.env-already-initialized != 'true' }}
      name: Set up UV
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ inputs.python-version }}
        version: "0.8.13"

    - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      name: Lock all dependencies
      shell: bash
      run: |
        uv lock
