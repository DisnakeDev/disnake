[flake8]
max-line-length = 100
statistics = true
exclude =
    CVS
    .bzr
    .hg
    .git
    __pycache__
    .tox
    .nox
    .eggs
    *.egg
    .venv
    venv
    .pytest_cache
    .mypy_cache
    .nox
    build

# For error codes, see this https://flake8.pycqa.org/en/latest/user/error-codes.html
ignore =
    # not compatiable with black
    E203,W503,
    # ignore linebreak after `/`
    W504,
    # line too long. Acceptable at the moment since these are mostly comments
    E501,
    # assigning lambdas to variables
    E731,
    # ambiguous variable names
    E741,
    # may be undefined, or defined from star imports
    F403,F405,
    # ignore try-except-pass. Bare excepts are caught with B001 and E722
    S110,
    # ignore using setattr and getattr with constants
    B009,B010,
    # ignore escaping in docstrings: temporary
    W605,
    # ignore multiple `##` starting a comment
    E266,

per-file-ignores =
    # unused imports, star imports
    */__init__.py: F401, F403
    # ignore whitespacing on flags
    # ignore setattr constants
    disnake/audit_logs.py:E241,B010
    # ignore whitespacing on flags
    disnake/enums.py:E221,E241,N815
    # ignore whitespacing after `:`
    disnake/ext/commands/params.py:E241
    # pytest uses assert for testing
    tests/**: S101

    # B008: runtime function calls are how Params work,
    # S311: examples don't misuse random generation
    # I   : example imports cannot be checked by isort
    # S105: possible hardcoded passwords TODO
    examples/**:B008,S311,I,S105
    # usage of assert and interface binding, allowable for the third party lib at use
    # also have to reignore whatever is from the last check that pops up here
    examples/basic_voice.py:S101,S104,I
